---
title: "The Musician's Journey: Factors Shaping Skill and Practice"
author: "Paramanyu Gupta"
format: html
execute:
  echo: false # This setting hides all R code from displaying in the output by default
---

```{r}
#| label: setup-libraries
#| message: false
#| warning: false
# Load necessary libraries for data analysis, modeling, and plotting
library(tidyverse)
library(readr)
library(tidymodels)
library(marginaleffects)
library(broom)
```

```{r}
#| label: data-generating-mechanism
#| include: false # This hides both the code and any output of this chunk from the final document

# Load the raw dataset
data_path <- "data/music_performance_evaluation_data.csv"
music_data <- read_csv(data_path)

# Data preparation for the linear regression model and plotting.
# Rename columns for clarity and convert categorical variables to factors.
music_data_cleaned <- music_data %>%
  rename(
    instrument = Instrument,
    practice_duration_min = `Focus_Time (min)`, # Retained in minutes
    performance_score = Performance_Score,
    gender = Gender,
    learning_level = Class_Level,
    lesson_context = Lesson_Type # Renaming Lesson_Type for clarity
  ) %>%
  mutate(
    instrument = as.factor(instrument),
    gender = as.factor(gender),
    learning_level = factor(learning_level, levels = c("Beginner", "Intermediate", "Advanced"), ordered = TRUE),
    lesson_context = as.factor(lesson_context)
  ) %>%
  # Filter out potentially erroneous scores over 100% for a cleaner visualization
  filter(performance_score <= 100)

# Prepare data for the faceted plot, creating a 'plot_category' that includes instruments and Theory
music_data_for_faceted_plot <- music_data_cleaned |>
  mutate(
    plot_category = case_when(
      lesson_context == "Practical" ~ as.character(instrument), # Use instrument name for practical lessons
      lesson_context == "Theory" ~ "Theory Lessons"             # Assign "Theory Lessons" for theory lessons
    ),
    plot_category = as.factor(plot_category) # Convert to factor for proper faceting and coloring
  )

# The fit_performance model remains here as the Data Generating Mechanism
fit_performance <- linear_reg() %>%
  fit(performance_score ~ Age + gender + practice_duration_min + instrument, data = music_data_cleaned)
```

```{r}
#| label: performance-vs-practice-plot
#| message: false
#| warning: false
#| fig-width: 14 # Increased width to accommodate 6 panels better
#| fig-height: 9 # Increased height for better panel layout

# Plot to show the linear relationship between practice and performance for each instrument
# and for "Theory Lessons" in separate facets, with trends only and no individual data points.
ggplot(music_data_for_faceted_plot, aes(x = practice_duration_min, y = performance_score, color = plot_category)) +
  geom_smooth(method = "lm", se = FALSE, linewidth = 1.2) + # Linear trend line without confidence interval, no dots
  facet_wrap(~ plot_category, scales = "free_x", ncol = 3) + # Facet by the new plot_category
  labs(
    title = "Relationship Between Practice Duration and Performance Score",
    subtitle = "For many categories, increased practice duration is linked to improved performance, emphasizing the value of dedicated training in musical skill development.",
    x = "Practice Duration (Minutes)",
    y = "Overall Performance Score (0-100%)",
    color = "Category" # Changed legend title to reflect combined categories
  ) +
  theme_minimal(base_size = 14) +
  scale_color_brewer(palette = "Dark2") + # Using a palette that can distinguish 6 categories well
  theme(
    legend.position = "bottom",
    plot.title.position = "plot",
    plot.title = element_text(margin = margin(b = 10)), # More space below main title
    plot.subtitle = element_text(margin = margin(b = 15)), # More space below subtitle
    strip.text = element_text(face = "bold", margin = margin(b = 5, t = 5)), # Space around facet titles
    panel.spacing = unit(1.5, "lines"), # Space between individual plot panels
    panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5), # Added simple black borders to panels
    plot.margin = unit(c(1, 1, 1, 1), "lines"), # Margin around the entire plot area
    axis.title.x = element_text(margin = margin(t = 10)), # Space above x-axis title
    axis.title.y = element_text(margin = margin(r = 10))  # Space right of y-axis title
  )
```

Have you ever truly considered what transforms an aspiring musician's dedication into tangible skill, or how the hours spent practicing translate into a virtuoso performance? This project explores that very question by analyzing a dataset on music performance, and its findings are vividly presented in a series of faceted line graphs. Each graph, with Practice Duration (Minutes) on the X-axis and Overall Performance Score (0-100%) on the Y-axis, illustrates the strong, positive correlation between time invested and performance quality. We can observe this consistent upward trend across various instruments, with examples like the Guitar and Piano showing a clear, proportional increase in scores as practice time rises. Moreover, the data also highlights the importance of theoretical knowledge, as the panel for Theory Lessons similarly demonstrates a positive relationship. These findings collectively reinforce that sustained, focused practice is the most critical element in a musician's development, paving the way for enhanced skill and superior performance.